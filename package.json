{
	"name": "ghdl-interface",
	"displayName": "GHDL Interface",
	"description": "VSCode interface for ghdl",
	"publisher": "johannesbonk",
	"version": "1.1.2",
	"repository": {
		"type": "git",
		"url": "https://github.com/johannesbonk/vscode-ghdl-interface"
	},
	"license": "SEE LICENSE in LICENSE.md",
	"bugs": {
		"url": "https://github.com/johannesbonk/vscode-ghdl-interface/issues"
	},
	"icon": "res/icon.png",
	"galleryBanner": {
		"color": "#C99643",
		"theme": "dark"
	},
	"engines": {
		"vscode": "^1.43.0"
	},
	"categories": [
		"Programming Languages",
		"Other"
	],
	"keywords": [
		"ghdl",
		"GHDL",
		"hdl",
		"vhdl",
		"VHDL",
		"gtkwave"
	],
	"activationEvents": [
		"onCommand:extension.editor_ghdl-import_files",
		"onCommand:extension.editor_ghdl-analyze_file",
		"onCommand:extension.editor_ghdl-elaborate_file",
		"onCommand:extension.editor_ghdl-make_unit",
		"onCommand:extension.editor_ghdl-run_unit",
		"onCommand:extension.editor_ghdl-quick-run_unit",
		"onCommand:extension.editor_ghdl-clean",
		"onCommand:extension.editor_ghdl-remove",
		"onCommand:extension.explorer_ghdl-quick-run_unit",
		"onCommand:extension.explorer_ghdl-remove",
		"onCommand:extension.explorer_gtkwave"
	],
	"main": "./src/ghdlInterface.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.editor_ghdl-import_files",
				"title": "GHDL: Import Files"
			},
			{
				"command": "extension.editor_ghdl-analyze_file",
				"title": "GHDL: Analyze File"
			},
			{
				"command": "extension.editor_ghdl-elaborate_file",
				"title": "GHDL: Elaborate File"
			},
			{
				"command": "extension.editor_ghdl-make_unit",
				"title": "GHDL: Make Unit"
			},
			{
				"command": "extension.editor_ghdl-run_unit",
				"title": "GHDL: Run Unit"
			},
			{
				"command": "extension.editor_ghdl-quick-run_unit",
				"title": "GHDL: Quick Run Unit"
			},
			{
				"command": "extension.editor_ghdl-clean",
				"title": "GHDL: Clean"
			},
			{
				"command": "extension.editor_ghdl-remove",
				"title": "GHDL: Remove"
			},
			{
				"command": "extension.explorer_ghdl-quick-run_unit",
				"title": "GHDL: Quick Run Unit"
			},
			{
				"command": "extension.explorer_ghdl-remove",
				"title": "GHDL: Remove"
			},
			{
				"command": "extension.explorer_gtkwave",
				"title": "Open in GTKWave"
			}
		],
		"configuration": [
			{
				"title": "GHDL Interface",
				"properties": {
					"ghdl-interface.library.WorkLibraryName": {
						"type": "string",
						"scope": "resource",
						"default": "",
						"description": "Specifies the name of the 'WORK' library (set to the default name 'WORK' if left blank)"
					},
					"ghdl-interface.library.WorkLibraryPath": {
						"type": "string",
						"scope": "resource",
						"default": "",
						"format": "uri",
						"description": "Specifies the directory where the 'WORK' library is located (set to the workspace top directory if left blank)"
					},
					"ghdl-interface.library.LibraryDirectory": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"scope": "resource",
						"default": "",
						"format": "uri",
						"description": "Specifies the directory/path where GHDL searchs for '.cf' library files (not used if left blank)"
					},
					"ghdl-interface.vhdl.VHDLStandard": {
						"type": "string",
						"scope": "resource",
						"default": "93c",
						"enum": [
							"87",
							"93",
							"93c",
							"00",
							"02",
							"08"
						],
						"description": "Specifies the VHDL standard to use"
					},
					"ghdl-interface.library.IEEEVersion": {
						"type": "string",
						"scope": "resource",
						"default": "standard",
						"enum": [
							"none",
							"standard",
							"mentor"
						],
						"description": "Specifies VHDL standard to use"
					},
					"ghdl-interface.library.synopsys": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Allows the use of synopsys non standard packages"
					},
					"ghdl-interface.general.verbose": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Tells GHDL to be verbose"
					},
					"ghdl-interface.simulation.TimeResolution": {
						"type": "string",
						"scope": "resource",
						"default": "auto",
						"enum": [
							"auto",
							"fs",
							"ps",
							"ns",
							"us",
							"ms",
							"sec"
						],
						"description": "Sets the base time resolution for the simulation"
					},
					"ghdl-interface.general.RelaxedRules": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Set relaxed rules to be compatible with other simulators or synthesizers"
					},
					"ghdl-interface.general.vitalChecks": {
						"type": "boolean",
						"scope": "resource",
						"default": true,
						"description": "Enable chacksof restriction on VITAL units"
					},
					"ghdl-interface.general.PSL": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Enable parsing of PSL assertions within comments"
					},
					"ghdl-interface.general.explicit": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "When two operators are overloaded, give preference to the explicit declaration"
					},
					"ghdl-interface.general.synBinding": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Use synthesizer rules for component binding"
					},
					"ghdl-interface.general.mbComments": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Allow UTF8 or multi-bytes chars in a comment"
					},
					"ghdl-interface.general.importFiles": {
						"type": "string",
						"scope": "resource",
						"default": "*.vhd",
						"description": "The files imported by Import Files"
					},
					"ghdl-interface.general.autoGHW": {
						"type": "boolean",
						"scope": "resource",
						"default": true,
						"description": "Automatically name the ghw-File after entity (Leave blank for UI-Prompt)"
					},
					"ghdl-interface.general.autoGTKWave": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Open the ghw-File automatically in GTKWave after run"
					},
					"ghdl-interface.general.autoRemove": {
						"type": "boolean",
						"scope": "resource",
						"default": false,
						"description": "Remove work files (e.g. cf) automatically after QuickRun"
					}
				}
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd",
					"command": "extension.editor_ghdl-import_files",
					"group": "1_modification@2"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd",
					"command": "extension.editor_ghdl-analyze_file",
					"group": "1_modification@3"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.editor_ghdl-elaborate_file",
					"group": "1_modification@4"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd",
					"command": "extension.editor_ghdl-make_unit",
					"group": "1_modification@5"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.editor_ghdl-run_unit",
					"group": "1_modification@6"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.editor_ghdl-quick-run_unit",
					"group": "1_modification@7"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.editor_ghdl-clean",
					"group": "1_modification@8"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.editor_ghdl-remove",
					"group": "1_modification@9"
				}
			],
			"explorer/context": [
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.explorer_ghdl-quick-run_unit",
					"group": "1_modification@3"
				},
				{
					"when": "resourceExtname == .vhdl || resourceExtname == .vhd || resourceExtname == .vht",
					"command": "extension.explorer_ghdl-remove",
					"group": "7_modification@4"
				},
				{
					"when": "resourceExtname == .ghw || resourceExtname == .vcd",
					"command": "extension.explorer_gtkwave",
					"group": "7_modification@5"
				}
			]
		},
		"keybindings": [
			{
				"command": "extension.editor_ghdl-import_files",
				"key": "ctrl+alt+i",
				"mac": "shift+cmd+i",
				"linux": "shift+alt+i"
			},
			{
				"command": "extension.editor_ghdl-analyze_file",
				"key": "ctrl+alt+a",
				"mac": "shift+cmd+a",
				"linux": "shift+alt+a"
			},
			{
				"command": "extension.editor_ghdl-elaborate_file",
				"key": "ctrl+alt+l",
				"mac": "shift+cmd+e",
				"linux": "shift+alt+e"
			},
			{
				"command": "extension.editor_ghdl-make_unit",
				"key": "ctrl+alt+m",
				"mac": "shift+cmd+m",
				"linux": "shift+alt+m"
			},
			{
				"command": "extension.editor_ghdl-run_unit",
				"key": "ctrl+alt+r",
				"mac": "shift+cmd+r",
				"linux": "shift+alt+r"
			},
			{
				"command": "extension.editor_ghdl-quick-run_unit",
				"key": "ctrl+alt+q",
				"mac": "shift+cmd+q",
				"linux": "shift+alt+q"
			},
			{
				"command": "extension.editor_ghdl-clean",
				"key": "ctrl+alt+c",
				"mac": "shift+cmd+c",
				"linux": "shift+alt+c"
			},
			{
				"command": "extension.editor_ghdl-remove",
				"key": "ctrl+alt+d",
				"mac": "shift+cmd+d",
				"linux": "shift+alt+d"
			}
		]
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.43.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.0.1",
		"typescript": "^3.7.5",
		"vscode-test": "^1.3.0"
	}
}
